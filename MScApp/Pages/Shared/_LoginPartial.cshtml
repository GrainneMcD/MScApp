@using Microsoft.AspNetCore.Identity
@using MScApp.Core
@using Microsoft.AspNetCore.Authorization

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject IAuthorizationService AuthorizationService
@{
    var fullName = User.Identity.IsAuthenticated ?
        User.Claims.First(c => c.Type == "FullName").Value : "";

    var IsAdminAuthorizationResult = await AuthorizationService.AuthorizeAsync(User, "IsAdmin");
}

<ul class="loginNav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="navLi">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @fullName!</a>
        </li>
        @if (IsAdminAuthorizationResult.Succeeded)
        {
            <li class="navLi">
                <button class="nav-link btn btn-link text-dark dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown">
                    Register Applicant
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link text-dark dropdown-item" id="register" asp-page="/Account/Register">Register Single Applicant</a>
                    <a class="nav-link text-dark dropdown-item" asp-area="Identity" asp-page="/Account/BulkRegister">Bulk Register Applicants</a>
                </div>
            </li>
            <li class="navLi dropdown-menu">

            </li>
            <li class="navLi">

            </li>
        }
        <li class="navLi">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="navBtn nav-link btn btn-link text-dark">Log Out</button>
            </form>
        </li>
    }
    else
    {
        <li class="navLi">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
